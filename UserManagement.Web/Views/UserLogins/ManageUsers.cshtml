@model IQueryable<UserManagement.DAL.Models.Users.UserLogin>

@{
    ViewBag.Title = "Users management";
}

<style>

    /*    #manageUsers {
        width: 80%;
        margin: 0 auto;
    }*/

    #manageUsers_header {
        text-align: center;
    }

        #manageUsers_header > div > div {
            border-bottom: 1px #dddddd solid;
        }

    #grid_users > thead {
        text-align: center;
    }

        #grid_users > thead > tr th:nth-child(7) {
            width: 300px;
        }

    button {
        width: 100px;
    }

    .btnDetails {
        width: 50px;
    }

    #grid_users > tbody > tr td {
        align-content: center;
    }

        #grid_users > tbody > tr td:nth-child(6), #grid_users > tbody > tr td:nth-child(7) {
            text-align: center;
        }
</style>

<section id="manageUsers">

    <div id="manageUsers_header">
        <div class="row justify-content-center">
            <div class="col-lg-10">
                <h2>@ViewBag.Title</h2>
            </div>
        </div>
    </div>

    <br />

    <div id="manageUsers_content">

        <div id="table_header">
            <div class="row justify-content-center">
                <div class="col-lg-10">
                    <button id="btnCreate" class="btn btn-success" type="button">Add User</button>
                </div>
            </div>
        </div>

        <br />

        <div id="table-content">
            <div class="row justify-content-center">
                <div class="col-lg-10">
                    <div class="table-responsive align-content-md-center">

                        <table id="grid_users" class="table table-bordered table-hover table-striped">

                            <thead class="table-dark border-white">
                                <tr>
                                    <th scope="col">@Html.DisplayNameFor(model => model.First().UserName)</th>
                                    <th scope="col">@Html.DisplayNameFor(model => model.First().UserRole.RoleType)</th>
                                    <th scope="col">@Html.DisplayNameFor(model => model.First().EmailAddress)</th>
                                    <th scope="col">@Html.DisplayNameFor(model => model.First().PhoneNumber)</th>
                                    <th scope="col">@Html.DisplayNameFor(model => model.First().CreatedAt)</th>
                                    <th scope="col">@Html.DisplayNameFor(model => model.First().IsActived)</th>
                                    <th scope="col">Actions</th>
                                </tr>
                            </thead>

                            <tbody>
                                @foreach (var user in Model)
                                {
                                    <tr class="table-active">
                                        <td>@user.UserName</td>
                                        <td>@user.UserRole.RoleType</td>
                                        <td>@user.EmailAddress</td>
                                        <td>@user.PhoneNumber</td>
                                        <td>@user.CreatedAt.Date.ToShortDateString()</td>
                                        <td>@Html.Raw(user.IsActived ? "&#9989;" : "&#10060;")</td>
                                        <td>
                                            @*<button class="btnDetails btn btn-outline-dark" type="button" data-id="@user.UserLoginId">
                                                <span>
                                                    <i class="fa fa-user" aria-hidden="true"></i>
                                                </span>
                                            </button>*@
                                            <button class="btnUpdate btn btn-secondary" type="button" data-id="@user.UserLoginId">Edit</button>
                                            <button class="btnDelete btn btn-danger" type="button" data-id="@user.UserLoginId">Delete</button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<div id="modal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <!-- O conteúdo do modal será carregado aqui -->
        </div>
    </div>
</div>

@section Scripts {

    <script>

        function openModal() {
            // Inicializa o modal de forma clara
            var modalElement = document.getElementById('modal');
            var modal = new bootstrap.Modal(modalElement);

            // Exibe o modal
            modal.show();
        }

        function closeModal() {
            var modalElement = document.getElementById('modal');
            var modalInstance = bootstrap.Modal.getOrCreateInstance(modalElement); // Pega ou cria a instância existente

            // Fecha o modal
            modalInstance.hide();
        }

        // CREATE - Abrir o modal para criar um User
        $(document).on('click', '#btnCreate', function () {
            $.ajax({
                url: "/UserLogins/Create",
                type: "GET",
                success: function (data) {
                    $("#modal .modal-content").html(data);  // Carrega o conteúdo no modal
                    openModal();
                },
                error: function () {
                    alert("Error to load modal.");
                }
            });
        });

        //// DETAILS - Abrir o modal para mostrar mais detalhes do user
        //$(document).on('click', '.btnDetails', function () {

        //    // Obtém o ID
        //    var userId = $(this).attr("data-id"); // Obtém o ID

        //    //alert(userId)

        //    $.ajax({
        //        url: "/UserLogins/Details",
        //        type: "GET",
        //        data: { id: userId },
        //        success: function (data) {
        //            $("#modal .modal-content").html(data);
        //            openModal();
        //        },
        //        error: function () {
        //            alert("Error to load modal.");
        //        }
        //    });
        //});

        // EDIT - Abrir o modal para editar um User
        $(document).on('click', '.btnUpdate', function () {

            var userId = $(this).attr("data-id");

            // Para Debug
            //alert(userId)

            $.ajax({
                url: "/UserLogins/Update/",
                type: "GET",
                data: { id: userId },
                success: function (data) {
                    $("#modal .modal-content").html(data);
                    openModal();
                },
                error: function () {
                    alert("Error to load modal.");
                }
            });
        });

        // DELETE - Abrir o modal para editar um User
        $(document).on('click', '.btnDelete', function () {

            var userId = $(this).attr("data-id");

            // Para Debug
            //alert(userId)

            $.ajax({
                url: "/UserLogins/Delete/",
                type: "GET",
                data: { id: userId },
                success: function (data) {
                    $("#modal .modal-content").html(data);
                    openModal();
                },
                error: function () {
                    alert("Error to load modal.");
                }
            });
        });

        $("#modal").on('submit', 'form', function (event) {
            event.preventDefault();
            var form = $(this);
            $.ajax({
                url: form.attr('action'),
                type: 'POST',
                data: form.serialize(),
                success: function (response) {
                    if (response.success) {
                        closeModal();
                        location.reload(); // Recarrega a página fora do modal
                    } else {
                        $("#modal .modal-content").html(response);
                    }
                },
                error: function () {
                    alert("Error while processing the form.");
                }
            });
        });
    </script>
}