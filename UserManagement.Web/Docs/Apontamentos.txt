--------------------------------------------------------------------------------------------------------------------------------
// PROJETO
--------------------------------------------------------------------------------------------------------------------------------
-> ASP.NET (Without Identity)
-> MVC5, C#, Entity Framework 6, Code First, HTML, CSS, Razor e JavaScript, Bootstrap
-> Projeto: Autenticação e Gestão de Users (c/Forms Authentication)

--------------------------------------------------------------------------------------------------------------------------------
// OUTRO
--------------------------------------------------------------------------------------------------------------------------------

var userLogins = db.UserLogins.Include(u => u.UserProfile).Include(u => u.UserRole);

// EDIT
db.Entry(userLogin).State = EntityState.Modified;
db.SaveChanges();
return RedirectToAction("Index");

// DELETE
UserLogin userLogin = db.UserLogins.Find(id);
db.UserLogins.Remove(userLogin);
db.SaveChanges();

--------------------------------------------------------------------------------------------------------------------------------
// CREATE
--------------------------------------------------------------------------------------------------------------------------------
@model DataAccessLayer.Models.Users.UserLogin

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>UserLogin</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @*<div class="form-group">
            @Html.LabelFor(model => model.UserRoleId, "UserRoleId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("UserRoleId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UserRoleId, "", new { @class = "text-danger" })
            </div>
        </div>*@


    <div class="form-group">
        @Html.LabelFor(model => model.UserRole.RoleType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.UserRole.RoleType, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.UserRole.RoleType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CreatedAt, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CreatedAt, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CreatedAt, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsActived, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.IsActived)
                @Html.ValidationMessageFor(model => model.IsActived, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


--------------------------------------------------------------------------------------------------------------------------------
// EDIT
--------------------------------------------------------------------------------------------------------------------------------

@model DataAccessLayer.Models.Users.UserLogin

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>UserLogin</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.UserLoginId)

        <div class="form-group">
            @Html.LabelFor(model => model.UserRole.RoleType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.UserRole.RoleType, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UserRole.RoleType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreatedAt, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreatedAt, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreatedAt, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsActived, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsActived)
                    @Html.ValidationMessageFor(model => model.IsActived, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

--------------------------------------------------------------------------------------------------------------------------------
// DELETE
--------------------------------------------------------------------------------------------------------------------------------

@model DataAccessLayer.Models.Users.UserLogin

@{
    ViewBag.Title = "Delete";
}

<h2>Delete</h2>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>UserLogin</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.UserProfile.FirstName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.UserProfile.FirstName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.UserRole.UserRoleId)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.UserRole.UserRoleId)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.UserName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.UserName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Email)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Email)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Password)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Password)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CreatedAt)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CreatedAt)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.IsActived)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.IsActived)
        </dd>

    </dl>

    @using (Html.BeginForm()) {
        @Html.AntiForgeryToken()

        <div class="form-actions no-color">
            <input type="submit" value="Delete" class="btnt btn-default" /> |
            @Html.ActionLink("Back to List", "Index")
        </div>
    }
</div>


--------------------------------------------------------------------------------------------------------------------------------
// INDEX - TABELA
--------------------------------------------------------------------------------------------------------------------------------

@model IEnumerable<DataAccessLayer.Models.Users.UserLogin>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

<table class="table">
    <tr>
        
        <th>
            @Html.DisplayNameFor(model => model.UserName)
        </th>
    </tr>

@foreach (var item in Model) {
    <tr>
        @*<td>
            @Html.DisplayFor(modelItem => item.UserLogin.UserName)
        </td>*@
        <td>
            @Html.DisplayFor(modelItem => item.FirstName)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.UserLoginId }) |
            @Html.ActionLink("Details", "Details", new { id=item.UserLoginId }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.UserLoginId })
        </td>
    </tr>

</table>